name: Pipeline

on:
  push:
    branches: 
      - main

jobs:
    
  Build:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout del repositorio.
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      
      - name: Instalar node.
        uses: actions/setup-node@v4
        with:
          node-version: 20
        
      - name: Instalar las dependencias.
        run: npm install
      
      - name: Realizar las pruebas y el coverage.
        run: npm run coverage
      
      - name: Hacer la build.
        run: npm run build
          
      - name: Lint.
        run: npm run lint

      - name: SonarQube.
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.TOKEN_SONAR }}
      
      - name: Feedback - Test aprobado.
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.TOKEN_SLACK }}
          SLACK_ICON_EMOJI: squirrel
          SLACK_USERNAME: Agente de feedback
          SLACK_TITLE: "Estado de las pruebas:"
          SLACK_MESSAGE: "Test aprobado :)"
          MSG_MINIMAL: true
          SLACK_FOOTER: "CICD - ICS"

      - name: Feedback - Test fallidos.
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.TOKEN_SLACK }}
          SLACK_ICON_EMOJI: squirrel
          SLACK_USERNAME: Agente de feedback
          SLACK_COLOR: failure
          SLACK_TITLE: "Estado de las pruebas:"
          SLACK_MESSAGE: "Test fallido :("
          MSG_MINIMAL: true
          SLACK_FOOTER: "CICD - ICS"